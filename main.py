from dotenv import load_dotenv
import os
import telebot
import datetime

APIKEY = os.getenv('APIKEY')
bot = telebot.TeleBot(APIKEY)

name = ''
greeting = ''
again = False

@bot.message_handler(commands=['pozdravlenie'])
def start(message):
    global again
    again = True
    bot.send_message(message.from_user.id, "–í—ã —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç–µ –µ—â–µ –æ–¥–Ω–æ –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–µ.\n–£–∫–∞–∂–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—é ‚úçÔ∏è");
    bot.register_next_step_handler(message, get_name);

@bot.message_handler(commands=['start'])
def start(message):
    bot.send_message(message.from_user.id, "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –í–∞–ª–¥–∏—Å.\n\nüéÑ –ù–∞–ø–∏—à–∏—Ç–µ –í–∞—à–µ –∏–º—è üéÑ\n\n–ü—É—Å—Ç—å –≤—Å–µ –∑–Ω–∞—é—Ç –æ—Ç –∫–æ–≥–æ –ø—Ä–∏—à–ª–æ –Ω–æ–≤–æ–≥–æ–¥–Ω–µ–µ –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–µ!");
    bot.register_next_step_handler(message, get_name); 

@bot.message_handler(content_types=['text'])
def get_name(message):
    global name
    name = message.text
    if name[0] == '/' or name[0] == ' ':
        bot.send_message(message.from_user.id, "–í—ã —É–∫–∞–∑–∞–ª–∏ –Ω–µ–≤–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ.\n(–í–æ–∑–º–æ–∂–Ω–æ –≤—ã –ø–æ—Å—Ç–∞–≤–∏–ª–∏ –ø—Ä–æ–±–µ–ª –≤ –Ω–∞—á–∞–ª–µ)\n\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—é —Å–Ω–æ–≤–∞ ‚úçÔ∏è")
        bot.register_next_step_handler(message, get_name)
    else:
        bot.send_message(message.from_user.id, "üéÑ –ù–∞–ø–∏—à–∏—Ç–µ –Ω–æ–≤–æ–≥–æ–¥–Ω–µ–µ –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–µ üéÑ")
        bot.register_next_step_handler(message, get_greeting)

@bot.message_handler(content_types=['text'])
def get_greeting(message):
    global greeting
    greeting = message.text
    keyboard = telebot.types.InlineKeyboardMarkup();
    key_yes = telebot.types.InlineKeyboardButton(text='–î–∞ ‚úÖ', callback_data='yes')
    keyboard.add(key_yes)
    key_no= telebot.types.InlineKeyboardButton(text='–ù–µ—Ç ‚ùå', callback_data='no')
    keyboard.add(key_no)
    question = f'‚ÑπÔ∏è –í–∞—Å –∑–æ–≤—É—Ç <b>{name}</b>?\nüéÑ –í–∞—à–µ –Ω–æ–≤–æ–≥–æ–¥–Ω–µ–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ: <b>{greeting}</b>?'
    bot.send_message(message.from_user.id, text=question, reply_markup=keyboard, parse_mode="html")

@bot.message_handler(content_types=['text'])
def startagain(message):
    global name
    name = message.text
    if name[0] == '/' or name[0] == ' ':
        bot.send_message(message.from_user.id, "–í—ã —É–∫–∞–∑–∞–ª–∏ –Ω–µ–≤–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ.\n(–í–æ–∑–º–æ–∂–Ω–æ –≤—ã –ø–æ—Å—Ç–∞–≤–∏–ª–∏ –ø—Ä–æ–±–µ–ª –≤ –Ω–∞—á–∞–ª–µ)\n\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—é —Å–Ω–æ–≤–∞ ‚úçÔ∏è")
        bot.register_next_step_handler(message, get_name)
    else:
        bot.send_message(message.from_user.id, "üéÑ –ù–∞–ø–∏—à–∏—Ç–µ –Ω–æ–≤–æ–≥–æ–¥–Ω–µ–µ –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–µ üéÑ")
        bot.register_next_step_handler(message, get_greeting)

@bot.callback_query_handler(func=lambda call: True)
def callback_worker(call):
    global name, greeting, again
    if call.data == "yes":
        bot.send_message(-4535565607, text=f"–ò–º—è: {name}\n–ü–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–µ: {greeting}\n\n–î–∞—Ç–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: {datetime.datetime.now()}\n–û—Ç–ø—Ä–∞–≤–∏–ª: {call.message.from_user.id}\n\n–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–æ –µ—â–µ —Ä–∞–∑: {again}")
        bot.answer_callback_query(call.id)
        bot.edit_message_text(text="–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–æ ‚úÖ", chat_id=call.message.chat.id, message_id=call.message.id)
    elif call.data == "no":
        bot.answer_callback_query(call.id)
        message = bot.edit_message_text(text="–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –∑–∞–Ω–æ–≤–æ.\n\n–£–∫–∞–∂–∏—Ç–µ –í–∞—à–µ –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—é ‚úçÔ∏è", chat_id=call.message.chat.id, message_id=call.message.id)
        name=''
        greeting=''
        bot.register_next_step_handler(message, startagain)
        
bot.infinity_polling()